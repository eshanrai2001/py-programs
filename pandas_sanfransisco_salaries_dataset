Data available at : https://www.kaggle.com/datasets/kaggle/sf-salaries

import pandas as pd

data = pd.read_csv("salaries.csv")

#Display Top 10 Rows of The Dataset
data.head(10)

#Display last 10 Rows of The Dataset
data.tail(10)

#Find shape of our dataset
print("number of rows: ",data.shape[0])
print("number of columns: ",data.shape[1])

#Getting Information About Our Dataset Like Total Number Rows, Total Number of Columns, Datatypes of Each Column And Memory Requirement
data.info()

#Check Null Values In The Dataset
data.isnull().sum()

#Drop ID, Notes, Agency, and Status Columns
data.columns
data = data.drop(['Id','Notes','Agency','Status'],axis=1)

data.columns

#Get Overall Statistics About The Dataframe
data.describe()

#Find Occurrence of The Employee Names  (Top 5)
data['EmployeeName'].value_counts().head()

#find the number of unique job titles
data['JobTitle'].nunique()

#Total Number of Job Titles Contain Captain
len(data[data["JobTitle"].str.contains("Captain",case=False)])

# Display All the Employee Names From Fire Department
data[data["JobTitle"].str.contains("fire",case=False)]["EmployeeName"]

#Find Minimum, Maximum, and Average BasePay
data["BasePay"].describe()

#Replace 'Not Provided' in EmployeeName' Column to NaN
data1 = pd.read_csv("salaries.csv")
data1

import numpy as np 
data1["EmployeeName"] = data1["EmployeeName"].replace("Not provided",np.nan)
data1["EmployeeName"]

#Drop The Rows Having 5 Missing Values
data.drop(data[data1.isnull().sum(axis=1)==3].index,axis = 0, inplace=True)

#Find Job Title of ALBERT PARDINI
data1[data1["EmployeeName"] == "ALBERT PARDINI"]["JobTitle"]

#How Much ALBERT PARDINI Make (Include Benefits)?
data1[data1["EmployeeName"] == "ALBERT PARDINI"]["TotalPayBenefits"]

#Display Name of The Person Having The Highest BasePay
data1[data1["BasePay"].max()==data1["BasePay"]]["EmployeeName"]

#Find Average BasePay of All Employee Per Year 
data1.groupby("Year").mean()["BasePay"]

#Find Average BasePay of All Employee Per JobTitle 
data1.groupby("JobTitle").mean()["BasePay"]

#Find Average BasePay of Employee Having Job Title ACCOUNTANT  
data1[data1["JobTitle"]=="ACCOUNTANT"].mean()["BasePay"]

# Find Top 5 Most Common Jobs
data1["JobTitle"].value_counts().head()

